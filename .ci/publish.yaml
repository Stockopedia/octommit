apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: octommit-publish
  namespace: argo
  generateName: octommit-publish-
spec:
  imagePullSecrets:
    - name: dockerhub
  ttlStrategy:
    secondsAfterCompletion: 300
  securityContext:
    fsGroup: 2000 
  serviceAccountName: argo
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 3Gi    
  arguments:
    parameters:
      - name: branch
        value: main
  entrypoint: octommit-build
  templates:
  - name: octommit-build
    steps:
    - - name: checkout
        templateRef:
          name: git
          template: checkout
        arguments:
          parameters:
          - name: branch
            value: "{{workflow.parameters.branch}}"
          - name: repository
            value: "octommit"
    - - name: build
        template: npm
        arguments:
          parameters:
          - name: repository
            value: "octommit"
          - name: script
            value: |
              ls .yarn/
              yarn install --check-cache;
              yarn build
    - - name: test
        templateRef:
          name: npm
          template: run
        arguments:
          parameters:
          - name: repository
            value: "octommit"
          - name: script
            value: |-
              yarn test --coverage;
    - - name: semver
        templateRef:
          name: semantic-version
          template: version
        arguments:
          parameters:
          - name: repository
            value: octommit
          - name: branches
            value: "--branches main"
    - - name: get-tag
        templateRef:
          name: git
          template: get-tag
        arguments:
          parameters:
          - name: repository
            value: octommit
    - - name: publish
        template: publish
        arguments:
          parameters:
            - name: version
              value: "{{steps.get-tag.outputs.parameters.tag}}"
        when: "{{steps.get-tag.outputs.result}} == true"
    - - name: docker-build-and-push
        templateRef:
          name: docker
          template: build-and-push
        arguments:
          parameters:
          - name: repository
            value: octommit
          - name: tag
            value: "{{steps.get-tag.outputs.parameters.tag}}"
          - name: buildArgs
            value: "--build-arg NPM_TOKEN=$(NPM_TOKEN)"
        when: "{{steps.get-tag.outputs.result}} == true"

  - name: publish
    inputs:
      parameters:
        - name: version
    steps:
      - - name: npm-publish
          templateRef:
            name: npm
            template: run
          arguments:
            parameters:
            - name: repository
              value: "octommit"
            - name: script
              value: |-
                npm version {{inputs.parameters.version}}
                npm publish --registry https://verdaccio.stocko-infra.net;

  - name: npm
    inputs:
      parameters:
        - name: repository
        - name: script
        - name: image
          value: "node:15-alpine"
      artifacts:
        - name: dependencies
          path: /tmp/octommit/.yarn
          optional: true
          s3:
            bucket: devops.argo-workflows.stockopedia.com
            endpoint: s3.amazonaws.com
            region: eu-west-1
            insecure: false
            roleARN: arn:aws:iam::276791533976:role/ArgoWorkflowsSystemAccessRole
            useSDKCreds: true
            key: octommit/.yarn.gz
    outputs:
      artifacts:
        - name: dependencies
          path: /tmp/octommit/.yarn/
          s3:
            bucket: devops.argo-workflows.stockopedia.com
            endpoint: s3.amazonaws.com
            region: eu-west-1
            insecure: false
            roleARN: arn:aws:iam::276791533976:role/ArgoWorkflowsSystemAccessRole
            useSDKCreds: true
            key: octommit/.yarn.gz
    container:
      image: "{{inputs.parameters.image}}"
      workingDir: "/tmp/{{inputs.parameters.repository}}"
      env:
        - name: NPM_TOKEN
          valueFrom:
            secretKeyRef:
              name: workflows-npm-secret
              key: token
      command:
        - sh
        - -c
        - |
          ls
          npm set registry https://verdaccio.stocko-infra.net
          npm config set //verdaccio.stocko-infra.net/:_authToken "${NPM_TOKEN}"
          npm config set //verdaccio.stocko-infra.net/:always-auth true
          {{inputs.parameters.script}}
      volumeMounts:
        - name: workdir
          mountPath: /tmp
          readOnly: false