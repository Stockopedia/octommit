openapi: 3.0.1
info:
  title: Stockopedia Directory Service
  description:
    "This service provides sorting and slicing of directory data namely:
    Indices, index constituents, sectors (and industry groups), sector constituents,
    and securities"
  contact:
    email: dev@stockopedia.com
  version: 1.0.0
servers:
  - url: http://directory-service/v1
tags:
  - name: index
    description: Index-related functionality
  - name: sector
    description: Sector-related functionality
  - name: security
    description: Security-related functionality
paths:
  /indices:
    get:
      tags:
        - index
      summary: Sorts and paginates indices matching the criteria
      description: Indices can be filtered region and whether they are a benchmark
      parameters:
        - name: regions
          in: query
          description: Array of region IDs
          required: true
          style: form
          explode: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
        - name: is_benchmark
          in: query
          description: If set, filter Indices which are also benchmarks
          schema:
            type: boolean
        - name: column
          in: query
          description: The column by which to sort
          required: false
          schema:
            default: name
            type: string
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedIdsApiResponse"
        400:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
  /indices/securities:
    get:
      tags:
        - index
        - security
      summary: Sorts and paginates securities that belong to an index
      parameters:
        - name: index
          in: query
          description: The ID of the Index in the SQL database
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/securitiesSortColumnParam"
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRICsApiResponse"
        400:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
  /sectors/{sectorType}:
    get:
      tags:
        - sector
      summary: Sorts and paginates sectors matching the criteria
      description: Sectors can be filtered by region
      parameters:
        - name: sectorType
          in: path
          description: The level of the TRBC sector hierarchy to sort aggregate data for.
          required: true
          schema:
            type: string
            enum:
              - industryGroup
              - economicSector
        - name: region
          in: query
          description: Limit sectors to the region specified by region ID
          required: true
          schema:
            type: integer
        - name: column
          in: query
          description: The column by which to sort
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedIdsApiResponse"
        400:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
  /sectors/securities:
    get:
      tags:
        - sector
        - security
      summary: Sorts and paginates securities that belong to sector(s)
      parameters:
        - name: sectors
          in: query
          description:
            The IDs of the Sectors (these are all 'level 6' elements of the
            TRBC hiearchy)
          required: true
          style: form
          explode: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
        - name: is_listed
          in: query
          description: Whether to include or exclude listed securities
          required: true
          schema:
            type: boolean
        - $ref: "#/components/parameters/securitiesSortColumnParam"
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRICsApiResponse"
        400:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
  /securities:
    get:
      tags:
        - security
      summary: Sorts and paginates securities
      parameters:
        - name: regions
          in: query
          description: Array of region IDs
          required: true
          style: form
          explode: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
        - name: type
          in: query
          description: The type of securities to return
          required: true
          schema:
            type: string
            enum:
              - shr
              - ecl
              - bnd
              - prf
              - etf
        - $ref: "#/components/parameters/securitiesSortColumnParam"
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedIdsApiResponse"
        400:
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
components:
  schemas:
    Paging:
      type: object
      properties:
        total:
          type: integer
          example: 99
        page:
          type: integer
          example: 2
        totalPages:
          type: integer
          example: 10
    PaginatedIdsApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: integer
            example: 42
        paging:
          $ref: "#/components/schemas/Paging"
    PaginatedRICsApiResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
            example: "VOD.L"
        paging:
          $ref: "#/components/schemas/Paging"
    ParamError:
      type: object
      properties:
        value:
          type: string
          description: The value that was in error
          example: bananas
        msg:
          type: string
          description: The nature of the error
          example: "Order must be ASC or DESC"
        param:
          type: string
          description: The parameter that was in error
          example: order
        location:
          type: string
          description: Where the erroneous parameter is located
          example: query
    ApiErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ParamError"
  parameters:
    orderParam:
      name: order
      in: query
      description: The direction of the column sort
      required: false
      schema:
        default: asc
        type: string
        enum:
          - asc
          - desc
    offsetParam:
      name: offset
      in: query
      description:
        The number of items to skip before starting to collect the result
        set.
      schema:
        minimum: 0
        type: integer
    limitParam:
      name: limit
      in: query
      description: The numbers of items to return.
      schema:
        minimum: 1
        type: integer
        default: 40
    securitiesSortColumnParam:
      name: column
      in: query
      description: The column by which to sort the securities.
      required: true
      schema:
        type: string
