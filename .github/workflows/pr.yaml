name: Test
on:
  pull_request:
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: octommit-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        run: npm run test
  e2e-test:
    name: End-to-end test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: octommit-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build and link Octommit
        run: npm run build && npm link
      - name: End-to-end test
        env:
          GITHUB_ACCESS_TOKEN: ${{ github.token }}
        run: |
          octommit update \
            --set \[job:id\]=${{ github.run_id }}\;\[job:boolean\]=true\; \
            --repo octommit \
            --org Stockopedia \
            --sourcePath test-file.yaml \
            --outputPath test-file.yaml \
            --sourceBranch test \
            --outputBranch test \
            --message "ci: update for job: ${{ github.run_id }}"
      - name: Verify commit
        env:
          EXPECTED_COMMIT_MESSAGE: "ci: update for job: ${{ github.run_id }}"
        run: |
          git fetch
          python validate_commit.py
